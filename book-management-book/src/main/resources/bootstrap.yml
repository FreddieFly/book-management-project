eureka:
  client:
    # 是否启用eureka客户端。默认true
    # 本地调试时，若不想启动eureka，可配置false即可，而不需要注释掉@EnableDiscoveryClient这么麻烦。
    enabled: true
    # 是否检索服务（获取eureka服务列表）
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    # 是否向服务注册中心注册自己（如果仅作为调用者，不提供服务，可以为false）
    register-with-eureka: true
    # eureka服务的位置，如配置错误，则：Cannot execute request on any known server
    # 详见：com.netflix.discovery.endpoint.EndpointUtils
    serviceUrl:
      # 如果需要注册多个服务器，可用逗号隔开，例如：,
      defaultZone: http://127.0.0.1:18080/eureka/
  instance:
    # 如果zone使用hostname方式，则这个hostname也必须明确指定保持一致。如果zone使用IP地址方式，则这个hostname按如下配置自动读取IP（总得来说就是此处的hostname必须要和zone里面的保持一致）
    hostname: 127.0.0.1
    # 实例名。
    instance-id: 127.0.0.1:book-management-book:18084
    ip-address: 127.0.0.1
    # 服务失效时间。缺省为90秒服务端接收不到客户端的心跳，则剔除该客户端服务实例。
    lease-expiration-duration-in-seconds: 90
    # 服务续约间隔时间。默认每隔30秒，客户端会向服务端发送心跳。见DiscoveryClient.initScheduledTasks
    lease-renewal-interval-in-seconds: 30
    metadata-map:
      configPath: /config

server:
  max-http-header-size: 102400
  port: 18084
  tomcat:
    max-http-form-post-size: 0

spring:
  application:
    name: book-management-book
  cloud:
    config:
      fail-fast: false
      profile: auth,general,book
      retry:
        initial-interval: 2000
        max-attempts: 10
        max-interval: 10000
        multiplier: 2
      uri: http://127.0.0.1:18080/config/
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: NON_NULL
    time-zone: GMT+8
  main:
    allow-bean-definition-overriding: true
  mvc:
    dispatch-options-request: true
    dispatch-trace-request: false
    format:
      date: yyyy-MM-dd
  profiles:
    active: database
  servlet:
    multipart:
      file-size-threshold: 1MB
      max-file-size: 20971520
      max-request-size: 10485760